// // let a = 'asdas';
// // let colors = {
// //   asdas: 'asd',
// //   asdasd: "",
// // }
// // switch (a) {
// //   case 'asdasd':
// //     colors = {
// //       asdas: 'asdasd',
// //       asdasd: 'asdasd'
// //     }
// //     break;
// //   case 'asdasd':
// //     colors = {
// //       asdas: 'asdasd',
// //       asdasd: 'asdasd'
// //     }
// //     break;
// // }

// // const StatusColor = (
// //     type: "lose" | "active" | "warning" | "reserved" | "service"
// //   ) => {
// //     switch (type) {
// //       case "lose":
// //         break;
// //       case "active":
// //         colors;
// //         break;
// //       case "reserved":
// //         colors;
// //       case "service":
// //         colors;
// //       case "warning":
// //         colors;
// //     }
// //   };

// //

// <ItemWrapProvider isBadge={true} backgroundColor="static_purple" />
//       <ItemWrapProvider
//         backgroundColor="static_blue"
//         icon={{ name: "CalendarBoldIcon", color: "static_white" }}
//         borderRadius="8"
//       />
//       <ItemWrapProvider
//         backgroundColor="static_blue"
//         icon={{
//           name: "CalendarBoldIcon",
//           color: "static_black",
//         }}
//       />
//       <ItemWrapProvider photo="/avatar.webp" size="64" />

//       <SheduleDayEvent
//         type="active"
//         // photo="/avatar.webp"
//         icon="CofeeBoldIcon"
//         time="8:00"
//         title="Обед"
//         duration="17 мин"
//       />
//       <ScheduleChildItem
//         type="freeTimeFalse"
//         largeTitle="Выходной"
//         time="12:40"
//       />
//       <ScheduleChildItem
//         type="freeTimeTrue"
//         largeTitle="Выходной"
//         time="12:40"
//       />
//       <ScheduleChildItem
//         type="ConsultationTrue"
//         badge="static_white"
//         photo="/avatar.webp"
//         largeTitle="Консультация"
//         time="12:40"
//       />
//       <ScheduleChildItem
//         type="ConsultationFalse"
//         badge="static_red"
//         photo="/avatar.webp"
//         largeTitle="Консультация"
//         time="12:40"
//       />

//       <ScheduleChildHeader
//         type="inProcessActive"
//         date="10:00 - 18:00"
//         week="Пн"
//       />
//       <ScheduleChildHeader
//         type="inProcessFalse"
//         date="10:00 - 18:00"
//         week="Пн"
//       />
//       <ScheduleChildHeader
//         type="inProcessTrue"
//         date="10:00 - 18:00"
//         week="Пн"
//       />
// <ProblemCard
//         iconWrap={{
//           iconName: "CalendarBoldIcon",
//           iconBackgorund: "static_blue",
//           iconColor: "static_white",
//         }}
//         // icon={{
//         //   iconName: "CalendarTodayBoldIcon",
//         //   iconColor: "static_green",
//         // }}
//         title="title"
//         number={12}
//       />


// <SegmentedPicker />
      
//       <LargeTitle
//         type="middle"
//         title="title"
//         description="description"
//         photo="/avatar.webp"
//       />
//       <SearchFiled />

// <PanelItemWrapper title="asdas">adas</PanelItemWrapper>



// {/* <LeftPanel /> */}
//       <RightPanel>
//         <PanelItemWrapper title="Playboi Carti">
//           <LargeTitle
//             type="big"
//             title="asd"
//             description="sad"
//             photo="/avatar.webp"
//           />
//         </PanelItemWrapper>
//         <PanelItemWrapper title="Playboi Carti">
//           <CalendarRow />
//         </PanelItemWrapper>
//       </RightPanel>







const [show, setShow] = useState(false);
  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    if (event.target.value.length > 0) setShow(true);
    else setShow(false);
  };

  const [focus, setFocus] = useState(false);
  const handleFocus = (event: React.ChangeEvent<HTMLInputElement>) => {
    if (event.target.value) setFocus(true);
    else setFocus(false);
  };


